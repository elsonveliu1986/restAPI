/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Discount;
import io.swagger.model.DiscountRule;
import io.swagger.model.DiscountRules;
import io.swagger.model.Error;
import org.threeten.bp.OffsetDateTime;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-07-20T07:41:46.583Z")

@Api(value = "discount-rules", description = "the discount-rules API")
public interface DiscountRulesApi {

    @ApiOperation(value = "Add a new discount rule to DB", nickname = "addDiscountRule", notes = "Create Method for a new discount rule", tags={ "discount-rules", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 405, message = "Invalid input"),
        @ApiResponse(code = 415, message = "Discount Rule cannot be fetched.") })
    @RequestMapping(value = "/discount-rules",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<?> addDiscountRule(@ApiParam(value = "DiscountRule object that needs to be added to DB" ,required=true )  @Valid @RequestBody DiscountRule body);


    @ApiOperation(value = "Deletes a DiscountRule", nickname = "deleteDiscountRule", notes = "Deletes a RuleDiscount", tags={ "discount-rules", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 402, message = "No content found.", response = Error.class),
        @ApiResponse(code = 404, message = "Discount Rule does not exist."),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Error.class) })
    @RequestMapping(value = "/discount-rules/{id}",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.DELETE)
    ResponseEntity<?> deleteDiscountRule(@ApiParam(value = "The discount rule ID",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "Gets all discount rules", nickname = "findDiscountRules", notes = "Get list of discount rules", response = DiscountRules.class, tags={ "discount-rules", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = DiscountRules.class),
        @ApiResponse(code = 402, message = "No content found.", response = Error.class),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Error.class) })
    @RequestMapping(value = "/discount-rules",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<?> findDiscountRules(@ApiParam(value = "Start date of the discountRule") @Valid @RequestParam(value = "startDate", required = false) String startDate,@ApiParam(value = "End date of the discountRule") @Valid @RequestParam(value = "endDate", required = false) String endDate,@ApiParam(value = "Number discount rules returned") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Page number") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber);


    @ApiOperation(value = "Finds RuleDiscount by Id", nickname = "findRuleDiscountById", notes = "Returns a rule discount if it exists", response = Discount.class, tags={ "discount-rules", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Discount.class),
        @ApiResponse(code = 400, message = "Invalid status value"),
        @ApiResponse(code = 402, message = "No content found.", response = Error.class),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Error.class) })
    @RequestMapping(value = "/discount-rules/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<DiscountRule> findRuleDiscountById(@ApiParam(value = "The discount rule ID",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "Update an existing Discount Rule", nickname = "updateDiscountRule", notes = "Update an existing Discount Rule", tags={ "discount-rules", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 402, message = "No content found.", response = Error.class),
        @ApiResponse(code = 404, message = "Discount Rule does not exist."),
        @ApiResponse(code = 405, message = "Validation exception"),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Error.class) })
    @RequestMapping(value = "/discount-rules/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<DiscountRule> updateDiscountRule(@ApiParam(value = "The discount rule ID",required=true) @PathVariable("id") String id,@ApiParam(value = "Discount Rule object that needs to be added to DB" ,required=true )  @Valid @RequestBody DiscountRule body);

}
